head	0.41;
access;
symbols;
locks
	dankogai:0.41; strict;
comment	@# @;


0.41
date	2013.03.27.18.29.04;	author dankogai;	state Exp;
branches;
next	0.40;

0.40
date	2013.03.27.18.05.37;	author dankogai;	state Exp;
branches;
next	0.31;

0.31
date	2013.03.19.08.33.46;	author dankogai;	state Exp;
branches;
next	0.30;

0.30
date	2013.03.17.06.58.10;	author dankogai;	state Exp;
branches;
next	0.20;

0.20
date	2013.03.16.11.08.13;	author dankogai;	state Exp;
branches;
next	0.11;

0.11
date	2013.03.15.11.29.32;	author dankogai;	state Exp;
branches;
next	0.10;

0.10
date	2013.03.15.09.46.49;	author dankogai;	state Exp;
branches;
next	0.2;

0.2
date	2013.03.15.09.36.56;	author dankogai;	state Exp;
branches;
next	0.1;

0.1
date	2013.03.15.08.34.48;	author dankogai;	state Exp;
branches;
next	;


desc
@@


0.41
log
@*** empty log message ***
@
text
@/*
 * $Id: object-clone.js,v 0.40 2013/03/27 18:05:37 dankogai Exp dankogai $
 *
 *  Licensed under the MIT license.
 *  http://www.opensource.org/licenses/mit-license.php
 *
 */

(function(global) {
    'use strict';
    if (!Object.freeze || typeof Object.freeze !== 'function') {
        throw Error('ES5 support required');
    }
    // from ES5
    var O = Object, OP = O.prototype,
    create = O.create,
    defineProperty = O.defineProperty,
    defineProperties = O.defineProperties,
    getOwnPropertyNames = O.getOwnPropertyNames,
    getOwnPropertyDescriptor = O.getOwnPropertyDescriptor,
    getPrototypeOf = O.getPrototypeOf,
    freeze = O.freeze,
    isFrozen = O.isFrozen,
    isSealed = O.isSealed,
    seal = O.seal,
    isExtensible = O.isExtensible,
    preventExtensions = O.preventExtensions,
    hasOwnProperty = OP.hasOwnProperty,
    toString = OP.toString,
    isArray = Array.isArray,
    slice = Array.prototype.slice;
    // Utility functions; some exported
    function defaults(dst, src) {
        getOwnPropertyNames(src).forEach(function(k) {
            if (!hasOwnProperty.call(dst, k)) defineProperty(
                dst, k, getOwnPropertyDescriptor(src, k)
            );
        });
        return dst;
    };
    var isObject = function(o) { return o === Object(o) };
    var isPrimitive = function(o) { return o !== Object(o) };
    var isFunction = function(f) { return typeof(f) === 'function' };
    var signatureOf = function(o) { return toString.call(o) };
    var HASWEAKMAP = (function() { // paranoia check
        try {
            var wm = WeakMap();
            wm.set(wm, wm);
            return wm.get(wm) === wm;
        } catch(e) {
            return false;
        }
    })();
    // exported
    function is (x, y) {
        return x === y
            ? x !== 0 ? true
            : (1 / x === 1 / y) // +-0
        : (x !== x && y !== y); // NaN
    };
    function isnt (x, y) { return !is(x, y) };
    var defaultCK = {
        descriptors:true,
        extensibility:true, 
        enumerator:getOwnPropertyNames
    };
    function equals (x, y, ck) {
        var vx, vy;
        if (HASWEAKMAP) {
            vx = WeakMap();
            vy = WeakMap();
        }
        ck = defaults(ck || {}, defaultCK);
        return (function _equals(x, y) {
            if (isPrimitive(x)) return is(x, y);
            if (isFunction(x))  return is(x, y);
            // check deeply
            var sx = signatureOf(x), sy = signatureOf(y);
            var i, l, px, py, sx, sy, kx, ky, dx, dy, dk, flt;
            if (sx !== sy) return false;
            switch (sx) {
            case '[object Array]':
            case '[object Object]':
                if (ck.extensibility) {
                    if (isExtensible(x) !== isExtensible(y)) return false;
                    if (isSealed(x) !== isSealed(y)) return false;
                    if (isFrozen(x) !== isFrozen(y)) return false;
                }
                if (vx) {
                    if (vx.has(x)) {
                        // console.log('circular ref found');
                        return vy.has(y);
                    }
                    vx.set(x, true);
                    vy.set(y, true);
                }
                px = ck.enumerator(x);
                py = ck.enumerator(y);
                if (ck.filter) {
                    flt = function(k) {
                        var d = getOwnPropertyDescriptor(this, k);
                        return ck.filter(d, k, this);
                    };
                    px = px.filter(flt, x);
                    py = py.filter(flt, y);
                }
                if (px.length != py.length) return false;
                px.sort(); py.sort();
                for (i = 0, l = px.length; i < l; ++i) {
                    kx = px[i];
                    ky = py[i];
                    if (kx !== ky) return false;
                    dx = getOwnPropertyDescriptor(x, ky);
                    dy = getOwnPropertyDescriptor(y, ky);
                    if ('value' in dx) {
                        if (!_equals(dx.value, dy.value)) return false;
                    } else {
                        if (dx.get && dx.get !== dy.get) return false;
                        if (dx.set && dx.set !== dy.set) return false;
                    }
                    if (ck.descriptors) {
                        if (dx.enumerable !== dy.enumerable) return false;
                        if (ck.extensibility) {
                            if (dx.writable !== dy.writable)
                                return false;
                            if (dx.configurable !== dy.configurable)
                                return false;
                        }
                    }
                }
                return true;
            case '[object RegExp]':
            case '[object Date]':
            case '[object String]':
            case '[object Number]':
            case '[object Boolean]':
                return ''+x === ''+y;
            default:
                throw TypeError(sx + ' not supported');
            }
        })(x, y);
    }
    function clone(src, deep, ck) {
        var wm;
        if (deep && HASWEAKMAP) {
            wm = WeakMap();
        }
        ck = defaults(ck || {}, defaultCK);
        return (function _clone(src) {
            // primitives and functions
            if (isPrimitive(src)) return src;
            if (isFunction(src)) return src;
            var sig = signatureOf(src);
            switch (sig) {
            case '[object Array]':
            case '[object Object]':
                if (wm) {
                    if (wm.has(src)) {
                        // console.log('circular ref found');
                        return src;
                    }
                    wm.set(src, true);
                }
                var isarray = isArray(src);
                var dst = isarray ? [] : create(getPrototypeOf(src));
                ck.enumerator(src).forEach(function(k) {
                    // Firefox forbids defineProperty(obj, 'length' desc)
                    if (isarray && k === 'length') {
                        dst.length = src.length;
                    } else {
                        if (ck.descriptors) {
                            var desc = getOwnPropertyDescriptor(src, k);
                            if (ck.filter && !ck.filter(desc, k, src)) return;
                            if (deep && 'value' in desc) 
                                desc.value = _clone(src[k]);
                            defineProperty(dst, k, desc);
                        } else {
                            dst[k] = _clone(src[k]);
                        }
                    }
                });
                if (ck.extensibility) {
                    if (!isExtensible(src)) preventExtensions(dst);
                    if (isSealed(src)) seal(dst);
                    if (isFrozen(src)) freeze(dst);
                }
                return dst;
            case '[object RegExp]':
            case '[object Date]':
            case '[object String]':
            case '[object Number]':
            case '[object Boolean]':
                return deep ? new src.constructor(src.valueOf()) : src;
            default:
                throw TypeError(sig + ' is not supported');
            }
        })(src);
    };
    //  Install
    var obj2specs = function(src) {
        var specs = create(null);
        getOwnPropertyNames(src).forEach(function(k) {
            specs[k] = {
                value: src[k],
                configurable: true,
                writable: true,
                enumerable: false
            };
        });
        return specs;
    };
    var defaultProperties = function(dst, descs) {
        getOwnPropertyNames(descs).forEach(function(k) {
            if (!hasOwnProperty.call(dst, k)) defineProperty(
                dst, k, descs[k]
            );
        });
        return dst;
    };
    (Object.installProperties || defaultProperties)(Object, obj2specs({
        clone: clone,
        is: is,
        isnt: isnt,
        equals: equals
    }));
})(this);
@


0.40
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.31 2013/03/19 08:33:46 dankogai Exp dankogai $
d33 1
a33 9
    var extend = function(dst, src) {
        getOwnPropertyNames(src).forEach(function(k) {
            defineProperty(
                dst, k, getOwnPropertyDescriptor(src, k)
            )
        });
        return dst;
    };
    var defaults = function(dst, src) {
a40 15
    var defspec = extend( 
        create(null), getOwnPropertyDescriptor(Object, 'freeze')
    );
    delete defspec.value;
    var toSpec = function(v) { 
        return typeof(v) !== 'function' ? v
            : extend(extend(create(null), defspec), { value: v });
    };
    var defSpecs = function(src) {
        var specs = create(null);
        getOwnPropertyNames(src).forEach(function(k) {
            defineProperty(specs, k, toSpec(src[k]))
        });
        return specs;
    };
d200 21
a220 1
    (Object.installProperties || defaults)(Object, defSpecs({
@


0.31
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.30 2013/03/17 06:58:10 dankogai Exp dankogai $
d15 15
a29 14
    var create = Object.create,
    defineProperty = Object.defineProperty,
    defineProperties = Object.defineProperties,
    getOwnPropertyNames = Object.getOwnPropertyNames,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
    getPrototypeOf = Object.getPrototypeOf,
    freeze = Object.freeze,
    isFrozen = Object.isFrozen,
    isSealed = Object.isSealed,
    seal = Object.seal,
    isExtensible = Object.isExtensible,
    preventExtensions = Object.preventExtensions,
    hasOwnProperty = Object.prototype.hasOwnProperty,
    toString = Object.prototype.toString,
d222 2
a223 2
    // Object
    defaults(Object, defSpecs({
@


0.30
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.20 2013/03/16 11:08:13 dankogai Exp dankogai $
d101 1
a101 1
            var i, l, px, py, sx, sy, kx, ky, dx, dy, dk;
d121 8
d131 1
a131 1
                iter: for (i = 0, l = px.length; i < l; ++i) {
a136 1
                    if (ck.filter && !ck.filter(dx, kx, x)) continue iter;
@


0.20
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.11 2013/03/15 11:29:32 dankogai Exp dankogai $
d83 29
a111 19
    function isnt(x, y) { return !is(x, y) };
    function equals(x, y, vx, vy) {
        if (isPrimitive(x)) return is(x, y);
        if (isFunction(x))  return is(x, y);
        // check deeply
        var sx = signatureOf(x), sy = signatureOf(y);
        var i, l, px, py, sx, sy, kx, ky, dx, dy, dk;
        if (sx !== sy) return false;
        switch (sx) {
        case '[object Array]':
        case '[object Object]':
            if (isExtensible(x) !== isExtensible(y)) return false;
            if (isSealed(x) !== isSealed(y)) return false;
            if (isFrozen(x) !== isFrozen(y)) return false;
            if (HASWEAKMAP) {
                if (!vx) {
                    vx = WeakMap();
                    vy = WeakMap();
                } else {
d119 26
a144 16
            };
            px = getOwnPropertyNames(x),
            py = getOwnPropertyNames(y);
            if (px.length != py.length) return false;
            px.sort(); py.sort();
            iter: for (i = 0, l = px.length; i < l; ++i) {
                kx = px[i];
                ky = py[i];
                if (kx !== ky) return false;
                dx = getOwnPropertyDescriptor(x, ky);
                dy = getOwnPropertyDescriptor(y, ky);
                if (!equals(dx.value, dy.value, vx, vy)) return false
                delete dx.value;
                delete dy.value;
                for (dk in dx) {
                    if (!is(dx[dk], dy[dk])) return false;
d146 9
d156 6
a161 9
            return true;
        case '[object RegExp]':
        case '[object Date]':
        case '[object String]':
        case '[object Number]':
        case '[object Boolean]':
            return ''+x === ''+y;
        default:
            throw TypeError(sx + ' not supported');
d163 10
a172 13
    };
    function clone(src, deep, wm) {
        // primitives and functions
        if (isPrimitive(src)) return src;
        if (isFunction(src)) return src;
        var sig = signatureOf(src);
        switch (sig) {
        case '[object Array]':
        case '[object Object]':
            if (deep && HASWEAKMAP) {
                if (!wm) {
                    wm = WeakMap();
                } else {
d179 22
a200 12
            };
            var isarray = isArray(src);
            var dst = isarray ? [] : create(getPrototypeOf(src));
            getOwnPropertyNames(src).forEach(function(k) {
                // Firefox forbids defineProperty(obj, 'length' desc)
                if (isarray && k === 'length') {
                    dst.length = src.length;
                } else {
                    var desc = getOwnPropertyDescriptor(src, k);
                    if (deep && 'value' in desc) 
                        desc.value = clone(src[k], deep, wm);
                    defineProperty(dst, k, desc);
d202 11
a212 14
            });
            if (!isExtensible(src)) preventExtensions(dst);
            if (isSealed(src)) seal(dst);
            if (isFrozen(src)) freeze(dst);
            return dst;
        case '[object RegExp]':
        case '[object Date]':
        case '[object String]':
        case '[object Number]':
        case '[object Boolean]':
            return deep ? new src.constructor(src.valueOf()) : src;
        default:
            throw TypeError(sig + ' is not supported');
        }
@


0.11
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.10 2013/03/15 09:46:49 dankogai Exp dankogai $
d67 9
a75 11
    var hasProtoFunction = function(name) {
        return function(e) {
            return isPrimitive(o)              ? false
                : !o[name]                     ? false
                : hasOwnProperty.call(o, name) ? false
                : !isFunction(o[name])         ? false
                : true;
        };
    };
    var canCloneNode = hasProtoFunction('cloneNode');
    var canClone = hasProtoFunction('clone');
d84 1
a84 1
    function equals(x, y) {
d97 13
d114 1
a114 1
            for (i = 0, l = px.length; i < l; ++i) {
d120 1
a120 1
                if (!equals(dx.value, dy.value)) return false
d138 1
a138 1
    function clone(src, deep) {
d146 13
a158 1
            var dst = isArray(src) ? [] : create(getPrototypeOf(src));
d160 9
a168 3
                var desc = getOwnPropertyDescriptor(src, k);
                if (deep && 'value' in desc) desc.value = clone(src[k], deep);
                defineProperty(dst, k, desc);
@


0.10
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.2 2013/03/15 09:36:56 dankogai Exp dankogai $
@


0.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id: object-clone.js,v 0.1 2013/03/15 08:34:48 dankogai Exp dankogai $
@


0.1
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * $Id$
a6 4
 *  References:
 *    http://es5.github.com/
 *    http://wiki.ecmascript.org/doku.php?id=harmony:proposals
 *    https://github.com/paulmillr/es6-shim/
d12 1
a12 1
        throw Error('ES5 unsupported');
d124 1
a124 1
            throw TypeError(sx + ' unsupported');
d152 1
a152 1
            throw TypeError(sig + ' unsupported');
@
